{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Swiper from \"react-native-swipe-image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(100),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      boolean = _useState4[0],\n      setBoolean = _useState4[1];\n\n  var _useState5 = useState([{\n    url: \"https://images.pexels.com/photos/1382734/pexels-photo-1382734.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n    name: \"shakira\"\n  }, {\n    url: \"https://images.pexels.com/photos/9413/animal-cute-kitten-cat.jpg?cs=srgb&dl=adorable-animal-cat-9413.jpg&fm=jpg\",\n    name: \"cat\"\n  }, {\n    url: \"https://i.pinimg.com/236x/c6/6b/11/c66b111bf4df809e87a1208f75d2788b.jpg\",\n    name: \"baby\"\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      images = _useState6[0],\n      setImages = _useState6[1];\n\n  var bottom = function bottom() {\n    alert(\"Swipe Bottom\");\n  };\n\n  var top = function top() {\n    alert(\"Swipe Top\");\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(Swiper, {\n      images: images,\n      swipeBottom: function swipeBottom(e) {\n        return bottom(e);\n      },\n      swipeTop: function swipeTop(e) {\n        return top(e);\n      },\n      imageHeight: number,\n      textSize: number,\n      textBold: boolean,\n      textColor: String,\n      textUnderline: boolean\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/development/example1/source/screens/a2.js"],"names":["React","useState","StatusBar","Swiper","App","number","setNumber","boolean","setBoolean","url","name","images","setImages","bottom","alert","top","flex","e","String","styles","StyleSheet","create","container","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA4BH,QAAQ,CAAC,GAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8BL,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4BP,QAAQ,CAAC,CACnC;AACEQ,IAAAA,GAAG,EAAE,0GADP;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADmC,EAKnC;AACED,IAAAA,GAAG,EAAE,iHADP;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALmC,EASnC;AACED,IAAAA,GAAG,EAAE,yEADP;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATmC,CAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAeA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBC,IAAAA,KAAK,CAAC,cAAD,CAAL;AACD,GAFD;;AAIA,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChBD,IAAAA,KAAK,CAAC,WAAD,CAAL;AACD,GAFD;;AAGA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA,cACE,KAAC,MAAD;AACE,MAAA,MAAM,EAAEL,MADV;AAEE,MAAA,WAAW,EAAE,qBAACM,CAAD;AAAA,eAAOJ,MAAM,CAACI,CAAD,CAAb;AAAA,OAFf;AAGE,MAAA,QAAQ,EAAE,kBAACA,CAAD;AAAA,eAAOF,GAAG,CAACE,CAAD,CAAV;AAAA,OAHZ;AAIE,MAAA,WAAW,EAAEZ,MAJf;AAKE,MAAA,QAAQ,EAAEA,MALZ;AAME,MAAA,QAAQ,EAAEE,OANZ;AAOE,MAAA,SAAS,EAAEW,MAPb;AAQE,MAAA,aAAa,EAAEX;AARjB;AADF,IADF;AAcD;AAED,IAAMY,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View, Button, Image, Modal } from \"react-native\";\r\nimport Swiper from \"react-native-swipe-image\";\r\n\r\nexport default function App() {\r\n  const [number, setNumber] = useState(100);\r\n  const [boolean, setBoolean] = useState(true);\r\n  const [images, setImages] = useState([\r\n    {\r\n      url: \"https://images.pexels.com/photos/1382734/pexels-photo-1382734.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n      name: \"shakira\",\r\n    },\r\n    {\r\n      url: \"https://images.pexels.com/photos/9413/animal-cute-kitten-cat.jpg?cs=srgb&dl=adorable-animal-cat-9413.jpg&fm=jpg\",\r\n      name: \"cat\",\r\n    },\r\n    {\r\n      url: \"https://i.pinimg.com/236x/c6/6b/11/c66b111bf4df809e87a1208f75d2788b.jpg\",\r\n      name: \"baby\",\r\n    },\r\n  ]);\r\n\r\n  const bottom = () => {\r\n    alert(\"Swipe Bottom\");\r\n  };\r\n\r\n  const top = () => {\r\n    alert(\"Swipe Top\");\r\n  };\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Swiper\r\n        images={images}\r\n        swipeBottom={(e) => bottom(e)}\r\n        swipeTop={(e) => top(e)}\r\n        imageHeight={number}\r\n        textSize={number}\r\n        textBold={boolean}\r\n        textColor={String}\r\n        textUnderline={boolean}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}