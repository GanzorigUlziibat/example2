{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { VStack, HStack, Button, IconButton, Icon, Text, NativeBaseProvider, Center, Box, StatusBar, View, Heading, FormControl, Input, Link, Pressable, FlatList, Avatar, Spacer, Checkbox } from \"native-base\";\nimport { MaterialIcons, Feather, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { openDatabase } from \"expo-sqlite\";\nimport App from \"./a2\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar db = openDatabase({\n  name: \"aimag.db\"\n});\n\nfunction HeaderAppBar(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      bg: \"#3700B3\",\n      barStyle: \"light-content\"\n    }), _jsx(Box, {\n      safeAreaTop: true,\n      bg: \"#6200ee\"\n    }), _jsxs(HStack, {\n      bg: \"#6200ee\",\n      px: \"1\",\n      py: \"3\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      w: \"100%\",\n      maxW: \"100%\",\n      children: [_jsxs(HStack, {\n        alignItems: \"center\",\n        children: [_jsx(IconButton, {\n          onPress: function onPress() {\n            return navigation.navigate(\"HomeScreen\");\n          },\n          icon: _jsx(Icon, {\n            size: \"sm\",\n            as: MaterialIcons,\n            name: \"arrow-back\",\n            color: \"white\"\n          })\n        }), _jsx(Text, {\n          color: \"white\",\n          fontSize: \"20\",\n          fontWeight: \"bold\",\n          children: \"\\u0410\\u0439\\u043C\\u0430\\u0433 \\u0441\\u043E\\u043D\\u0433\\u043E\\u0445\"\n        })]\n      }), _jsx(HStack, {\n        children: _jsx(IconButton, {\n          icon: _jsx(Icon, {\n            as: MaterialIcons,\n            name: \"save\",\n            size: \"sm\",\n            color: \"white\"\n          }),\n          onPress: function onPress() {\n            return updateAimag();\n          }\n        })\n      })]\n    })]\n  });\n}\n\nfunction Header(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(Center, {\n    children: _jsx(HeaderAppBar, {\n      navigation: navigation\n    })\n  });\n}\n\nfunction AimagJagsaaltShow(_ref3) {\n  var data = _ref3.data;\n\n  function CheckBoxChanged(isCheckd, ids) {\n    var cBoxVal = [];\n    cBoxVal.push([ids, isCheckd]);\n    alert(cBoxVal);\n  }\n\n  return _jsx(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return _jsx(Box, {\n        borderBottomWidth: \"1\",\n        _dark: {\n          borderColor: \"gray.600\"\n        },\n        borderColor: \"coolGray.200\",\n        pl: \"4\",\n        pr: \"5\",\n        py: \"2\",\n        children: _jsxs(HStack, {\n          space: 3,\n          justifyContent: \"space-between\",\n          children: [_jsx(VStack, {\n            children: _jsx(Text, {\n              _dark: {\n                color: \"warmGray.50\"\n              },\n              color: \"coolGray.800\",\n              bold: true,\n              children: item.name\n            })\n          }), _jsx(Spacer, {}), _jsx(Text, {\n            fontSize: \"xs\",\n            _dark: {\n              color: \"warmGray.50\"\n            },\n            color: \"coolGray.800\",\n            alignSelf: \"flex-start\",\n            children: item.acheck\n          }), _jsx(Checkbox, {\n            value: \"test\",\n            defaultIsChecked: item.acheck == 1 ? true : false,\n            accessibilityLabel: \"This is a dummy checkbox\",\n            onChange: function onChange(isChecked) {\n              return CheckBoxChanged(isChecked, item.aid);\n            }\n          })]\n        })\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.aid;\n    }\n  });\n}\n\nfunction updateAimag() {\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"UPDATE aimag SET ()\", [], function (tx, results) {\n        var temp = [];\n\n        for (var i = 0; i < results.rows.length; ++i) {\n          temp.push(results.rows.item(i));\n        }\n\n        setFlatListItems(temp);\n      });\n    });\n  }, []);\n}\n\nexport default (function (_ref5) {\n  var navigation = _ref5.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setFlatListItems = _useState2[1];\n\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT aid, name, acheck, alink, daraaalal FROM aimag ORDER BY daraaalal ASC\", [], function (tx, results) {\n        var temp = [];\n        var cBoxTemp = [];\n\n        for (var i = 0; i < results.rows.length; ++i) {\n          temp.push(results.rows.item(i));\n        }\n\n        cBoxVal = _objectSpread({}, temp);\n        setFlatListItems(temp);\n      });\n    });\n  }, []);\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      flex: 1,\n      px: \"0\",\n      children: [_jsx(Header, {\n        navigation: navigation\n      }), _jsx(AimagJagsaaltShow, {\n        data: data,\n        cBoxVal: cBoxVal\n      })]\n    })\n  });\n});","map":{"version":3,"sources":["C:/development/example1/source/screens/ChooseAimag.js"],"names":["React","useState","useEffect","VStack","HStack","Button","IconButton","Icon","Text","NativeBaseProvider","Center","Box","StatusBar","View","Heading","FormControl","Input","Link","Pressable","FlatList","Avatar","Spacer","Checkbox","MaterialIcons","Feather","MaterialCommunityIcons","openDatabase","App","db","name","HeaderAppBar","navigation","navigate","updateAimag","Header","AimagJagsaaltShow","data","CheckBoxChanged","isCheckd","ids","cBoxVal","push","alert","item","borderColor","color","acheck","isChecked","aid","transaction","tx","executeSql","results","temp","i","rows","length","setFlatListItems","cBoxTemp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Button,\r\n  IconButton,\r\n  Icon,\r\n  Text,\r\n  NativeBaseProvider,\r\n  Center,\r\n  Box,\r\n  StatusBar,\r\n  View,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Link,\r\n  Pressable,\r\n  FlatList,\r\n  Avatar,\r\n  Spacer,\r\n  Checkbox,\r\n} from \"native-base\";\r\nimport {\r\n  MaterialIcons,\r\n  Feather,\r\n  MaterialCommunityIcons,\r\n} from \"@expo/vector-icons\";\r\nimport { openDatabase } from \"expo-sqlite\";\r\nimport App from \"./a2\";\r\nvar db = openDatabase({ name: \"aimag.db\" });\r\n// let cBoxVal = [];\r\nfunction HeaderAppBar({ navigation }) {\r\n  return (\r\n    <>\r\n      <StatusBar bg=\"#3700B3\" barStyle=\"light-content\" />\r\n      <Box safeAreaTop bg=\"#6200ee\" />\r\n      <HStack\r\n        bg=\"#6200ee\"\r\n        px=\"1\"\r\n        py=\"3\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        w=\"100%\"\r\n        maxW=\"100%\"\r\n      >\r\n        <HStack alignItems=\"center\">\r\n          <IconButton\r\n            onPress={() => navigation.navigate(\"HomeScreen\")}\r\n            icon={\r\n              <Icon\r\n                size=\"sm\"\r\n                as={MaterialIcons}\r\n                name=\"arrow-back\"\r\n                color=\"white\"\r\n              />\r\n            }\r\n          />\r\n          <Text color=\"white\" fontSize=\"20\" fontWeight=\"bold\">\r\n            Аймаг сонгох\r\n          </Text>\r\n        </HStack>\r\n        <HStack>\r\n          {/* <IconButton icon={<Icon as={Feather} name=\"map\" size=\"sm\" color=\"white\" />} />\r\n          <IconButton icon={<Icon as={MaterialIcons} name=\"search\" size=\"sm\" color=\"white\" />} /> */}\r\n          <IconButton\r\n            icon={\r\n              <Icon as={MaterialIcons} name=\"save\" size=\"sm\" color=\"white\" />\r\n            }\r\n            onPress={() => updateAimag()}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n    </>\r\n  );\r\n}\r\n\r\n// http://oblador.github.io/react-native-vector-icons/   --Icons\r\n// (hvz base, Native Base)\r\n\r\nfunction Header({ navigation }) {\r\n  return (\r\n    <Center>\r\n      <HeaderAppBar navigation={navigation} />\r\n    </Center>\r\n  );\r\n}\r\n\r\nfunction AimagJagsaaltShow({ data }) {\r\n  function CheckBoxChanged(isCheckd, ids) {\r\n    // alert(isCheckd.toString() + \" \" + ids);\r\n    // for (let i = 0; i < 21; i++) {\r\n    //   cBoxVal.push([ids, isCheckd]);\r\n    // }\r\n    let cBoxVal = [];\r\n    cBoxVal.push([ids, isCheckd]);\r\n    alert(cBoxVal);\r\n  }\r\n  return (\r\n    <FlatList\r\n      data={data}\r\n      renderItem={({ item }) => (\r\n        <Box\r\n          borderBottomWidth=\"1\"\r\n          _dark={{\r\n            borderColor: \"gray.600\",\r\n          }}\r\n          borderColor=\"coolGray.200\"\r\n          pl=\"4\"\r\n          pr=\"5\"\r\n          py=\"2\"\r\n        >\r\n          <HStack space={3} justifyContent=\"space-between\">\r\n            <VStack>\r\n              <Text\r\n                _dark={{\r\n                  color: \"warmGray.50\",\r\n                }}\r\n                color=\"coolGray.800\"\r\n                bold\r\n              >\r\n                {item.name}\r\n              </Text>\r\n            </VStack>\r\n            <Spacer />\r\n            <Text\r\n              fontSize=\"xs\"\r\n              _dark={{\r\n                color: \"warmGray.50\",\r\n              }}\r\n              color=\"coolGray.800\"\r\n              alignSelf=\"flex-start\"\r\n            >\r\n              {item.acheck}\r\n            </Text>\r\n            <Checkbox\r\n              value=\"test\"\r\n              defaultIsChecked={item.acheck == 1 ? true : false}\r\n              accessibilityLabel=\"This is a dummy checkbox\"\r\n              onChange={(isChecked) => CheckBoxChanged(isChecked, item.aid)}\r\n            />\r\n          </HStack>\r\n        </Box>\r\n      )}\r\n      keyExtractor={(item) => item.aid}\r\n    />\r\n  );\r\n}\r\n\r\nfunction updateAimag() {\r\n  useEffect(() => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        \"UPDATE aimag SET ()\",\r\n        // \"SELECT name FROM sum\",\r\n        [],\r\n        (tx, results) => {\r\n          var temp = [];\r\n          for (let i = 0; i < results.rows.length; ++i)\r\n            temp.push(results.rows.item(i));\r\n\r\n          setFlatListItems(temp);\r\n        }\r\n      );\r\n    });\r\n  }, []);\r\n}\r\n\r\nexport default ({ navigation }) => {\r\n  let [data, setFlatListItems] = useState([]);\r\n  // let [cBoxVal, setcBoxVal] = useState([]);\r\n  // let [cBoxVal, setcBoxVal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        \"SELECT aid, name, acheck, alink, daraaalal FROM aimag ORDER BY daraaalal ASC\",\r\n        // \"SELECT name FROM sum\",\r\n        [],\r\n        (tx, results) => {\r\n          var temp = [];\r\n          var cBoxTemp = [];\r\n          for (let i = 0; i < results.rows.length; ++i) {\r\n            // var temp1 = [];\r\n            temp.push(results.rows.item(i));\r\n            // temp1.push(results.rows.item(i)[\"aid\"]);\r\n            // temp1.push(results.rows.item(i)[\"acheck\"]);\r\n            // cBoxTemp.push(temp1);\r\n            // cBoxTemp.push(results.rows.item(i));\r\n          }\r\n          cBoxVal = { ...temp };\r\n          setFlatListItems(temp);\r\n          // alert(data[0][1]);\r\n        }\r\n      );\r\n    });\r\n  }, []);\r\n  return (\r\n    <NativeBaseProvider>\r\n      <View flex={1} px=\"0\">\r\n        <Header navigation={navigation} />\r\n        <AimagJagsaaltShow data={data} cBoxVal={cBoxVal} />\r\n      </View>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}