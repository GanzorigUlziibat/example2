{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { WebView } from \"react-native-webview\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  var displayModal = function displayModal(show) {\n    setIsVisible(show);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Modal, {\n      visible: isVisible,\n      children: _jsxs(View, {\n        style: {\n          minHeight: 300\n        },\n        children: [_jsx(Text, {\n          children: \"I am the modal content!\"\n        }), _jsx(Button, {\n          title: \"CLOSE\",\n          onPress: function onPress() {\n            return displayModal(false);\n          }\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        displayModal(true);\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Show Modal\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  containerW: {\n    flex: 1\n  },\n  container: {\n    padding: 25,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    display: \"flex\",\n    height: 60,\n    borderRadius: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#2AC062\",\n    shadowColor: \"#2AC062\",\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25\n  },\n  closeButton: {\n    display: \"flex\",\n    height: 60,\n    borderRadius: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FF3974\",\n    shadowColor: \"#2AC062\",\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      height: 10,\n      width: 0\n    },\n    shadowRadius: 25\n  },\n  buttonText: {\n    color: \"#FFFFFF\",\n    fontSize: 22\n  },\n  image: {\n    marginTop: 150,\n    marginBottom: 10,\n    width: \"100%\",\n    height: 350\n  },\n  text: {\n    fontSize: 24,\n    marginBottom: 30,\n    padding: 40\n  }\n});","map":{"version":3,"sources":["C:/development/example1/source/screens/b1.js"],"names":["React","useState","StatusBar","WebView","App","navigation","isVisible","setIsVisible","displayModal","show","styles","container","minHeight","button","buttonText","StyleSheet","create","containerW","flex","padding","alignItems","justifyContent","display","height","borderRadius","width","backgroundColor","shadowColor","shadowOpacity","shadowOffset","shadowRadius","closeButton","color","fontSize","image","marginTop","marginBottom","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { WebView } from \"react-native-webview\";\r\n\r\nexport default function App({ navigation }) {\r\n  // initial state\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  // hide show modal\r\n  let displayModal = (show) => {\r\n    setIsVisible(show);\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal visible={isVisible}>\r\n        <View style={{ minHeight: 300 }}>\r\n          <Text>I am the modal content!</Text>\r\n          <Button title=\"CLOSE\" onPress={() => displayModal(false)} />\r\n        </View>\r\n      </Modal>\r\n\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          displayModal(true);\r\n        }}\r\n      >\r\n        <Text style={styles.buttonText}>Show Modal</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  containerW: {\r\n    flex: 1,\r\n  },\r\n  container: {\r\n    padding: 25,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    height: 60,\r\n    borderRadius: 6,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#2AC062\",\r\n    shadowColor: \"#2AC062\",\r\n    shadowOpacity: 0.5,\r\n    shadowOffset: {\r\n      height: 10,\r\n      width: 0,\r\n    },\r\n    shadowRadius: 25,\r\n  },\r\n  closeButton: {\r\n    display: \"flex\",\r\n    height: 60,\r\n    borderRadius: 6,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FF3974\",\r\n    shadowColor: \"#2AC062\",\r\n    shadowOpacity: 0.5,\r\n    shadowOffset: {\r\n      height: 10,\r\n      width: 0,\r\n    },\r\n    shadowRadius: 25,\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 22,\r\n  },\r\n  image: {\r\n    marginTop: 150,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n    height: 350,\r\n  },\r\n  text: {\r\n    fontSize: 24,\r\n    marginBottom: 30,\r\n    padding: 40,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}