{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from \"expo-camera\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(View, {});\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Camera, {\n      style: styles.camera,\n      type: type,\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \" Flip \"\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/development/example1/source/screens/b2.js"],"names":["React","useState","useEffect","Camera","App","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestCameraPermissionsAsync","status","styles","container","camera","buttonContainer","button","front","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA0CH,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOI,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBL,QAAQ,CAACE,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,MAAM,CAACS,6BAAP,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;AAECP,cAAAA,gBAAgB,CAACO,MAAM,KAAK,SAAZ,CAAhB;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAIR,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,KAAC,IAAD,KAAP;AACD;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACD;;AACD,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA,cACE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAED,MAAM,CAACE,MAAtB;AAA8B,MAAA,IAAI,EAAEN,IAApC;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACG,eAApB;AAAA,kBACE,KAAC,gBAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACI,MADhB;AAEE,UAAA,OAAO,EAAE,mBAAM;AACbP,YAAAA,OAAO,CACLD,IAAI,KAAKP,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACIN,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBW,KAD1B,GAEIhB,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAHrB,CAAP;AAKD,WARH;AAAA,oBAUE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEK,MAAM,CAACM,IAApB;AAAA;AAAA;AAVF;AADF;AADF;AADF,IADF;AAoBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport { Camera } from \"expo-camera\";\r\n\r\nexport default function App() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await Camera.requestCameraPermissionsAsync();\r\n      setHasPermission(status === \"granted\");\r\n    })();\r\n  }, []);\r\n\r\n  if (hasPermission === null) {\r\n    return <View />;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Camera style={styles.camera} type={type}>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setType(\r\n                type === Camera.Constants.Type.back\r\n                  ? Camera.Constants.Type.front\r\n                  : Camera.Constants.Type.back\r\n              );\r\n            }}\r\n          >\r\n            <Text style={styles.text}> Flip </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Camera>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}