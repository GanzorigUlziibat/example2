{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { VStack, HStack, Button, IconButton, Icon, Text, NativeBaseProvider, Center, Box, StatusBar, View, Heading, FormControl, Input, Link, Pressable, FlatList, Avatar, Spacer, Checkbox } from \"native-base\";\nimport { MaterialIcons, Feather, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { openDatabase } from \"expo-sqlite\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar db = openDatabase({\n  name: \"aimag.db\"\n});\n\nfunction App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setFlatListItems = _useState2[1];\n\n  var tempCBox = [];\n\n  function HeaderAppBar(_ref2) {\n    var navigation = _ref2.navigation;\n    return _jsxs(_Fragment, {\n      children: [_jsx(StatusBar, {\n        bg: \"#3700B3\",\n        barStyle: \"light-content\"\n      }), _jsx(Box, {\n        safeAreaTop: true,\n        bg: \"#6200ee\"\n      }), _jsxs(HStack, {\n        bg: \"#6200ee\",\n        px: \"1\",\n        py: \"3\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        w: \"100%\",\n        maxW: \"100%\",\n        children: [_jsxs(HStack, {\n          alignItems: \"center\",\n          children: [_jsx(IconButton, {\n            onPress: function onPress() {\n              return navigation.navigate(\"HomeScreen\");\n            },\n            icon: _jsx(Icon, {\n              size: \"sm\",\n              as: MaterialIcons,\n              name: \"arrow-back\",\n              color: \"white\"\n            })\n          }), _jsx(Text, {\n            color: \"white\",\n            fontSize: \"20\",\n            fontWeight: \"bold\",\n            children: \"\\u0410\\u0439\\u043C\\u0430\\u0433 \\u0441\\u043E\\u043D\\u0433\\u043E\\u0445\"\n          })]\n        }), _jsx(HStack, {\n          children: _jsx(IconButton, {\n            icon: _jsx(Icon, {\n              as: MaterialIcons,\n              name: \"save\",\n              size: \"sm\",\n              color: \"white\"\n            }),\n            onPress: function onPress() {\n              return updateAimag({\n                navigation: navigation\n              });\n            }\n          })\n        })]\n      })]\n    });\n  }\n\n  function Header(_ref3) {\n    var navigation = _ref3.navigation;\n    return _jsx(Center, {\n      children: _jsx(HeaderAppBar, {\n        navigation: navigation\n      })\n    });\n  }\n\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT aid, name, acheck, alink, daraaalal FROM aimag ORDER BY daraaalal ASC\", [], function (tx, results) {\n        var temp = [];\n        var tempCBox = [];\n\n        for (var i = 0; i < results.rows.length; ++i) {\n          temp.push(results.rows.item(i));\n          tempCBox.push([results.rows.item(i)[\"aid\"], results.rows.item(i)[\"acheck\"]]);\n        }\n\n        setcBoxVal([].concat(tempCBox));\n        setFlatListItems([].concat(temp));\n        alert(tempCBox);\n        alert(cBoxVal);\n        alert(temp);\n        alert(data);\n      });\n    });\n  }, []);\n\n  function AimagJagsaaltShow(_ref4) {\n    var data = _ref4.data;\n    return _jsx(FlatList, {\n      data: data,\n      renderItem: function renderItem(_ref5) {\n        var item = _ref5.item;\n        return _jsx(Box, {\n          borderBottomWidth: \"1\",\n          _dark: {\n            borderColor: \"gray.600\"\n          },\n          borderColor: \"coolGray.200\",\n          pl: \"4\",\n          pr: \"5\",\n          py: \"2\",\n          children: _jsxs(HStack, {\n            space: 3,\n            justifyContent: \"space-between\",\n            children: [_jsx(VStack, {\n              children: _jsx(Text, {\n                _dark: {\n                  color: \"warmGray.50\"\n                },\n                color: \"coolGray.800\",\n                bold: true,\n                children: item.name\n              })\n            }), _jsx(Spacer, {}), _jsx(Text, {\n              fontSize: \"xs\",\n              _dark: {\n                color: \"warmGray.50\"\n              },\n              color: \"coolGray.800\",\n              alignSelf: \"flex-start\",\n              children: item.acheck\n            }), _jsx(Checkbox, {\n              value: \"test\",\n              defaultIsChecked: item.acheck == 1 ? true : false,\n              accessibilityLabel: \"This is a dummy checkbox\",\n              onChange: function onChange(isChecked) {\n                return CheckBoxChanged(isChecked, item.aid);\n              }\n            }, item.aid)]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.aid;\n      }\n    });\n  }\n\n  function CheckBoxChanged(isCheckd, ids) {\n    tempCBox = _toConsumableArray(cBoxVal);\n\n    for (var i = 0; i < tempCBox.length; i++) {\n      if (tempCBox[i][0] == ids) {\n        tempCBox[i][1] = isCheckd == true ? 1 : 0;\n        break;\n      }\n    }\n  }\n\n  function updateAimag(_ref6) {\n    var navigation = _ref6.navigation;\n\n    var _loop = function _loop(i) {\n      db.transaction(function (tx) {\n        tx.executeSql(\"UPDATE aimag SET acheck=? WHERE aid=?\", [tempCBox[i][1], tempCBox[i][0]], function (tx, results) {\n          if (results.rowsAffected > 0) {\n            console.log(\"Success\", \"User updated successfully\", tempCBox[i][1], tempCBox[i][0]);\n          } else console.log(\"Updation Failed\");\n        });\n      });\n    };\n\n    for (var i = 0; i < tempCBox.length; i++) {\n      _loop(i);\n    }\n\n    navigation.navigate(\"HomeScreen\");\n  }\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      flex: 1,\n      px: \"0\",\n      children: [_jsx(Header, {\n        navigation: navigation\n      }), _jsx(AimagJagsaaltShow, {\n        data: data\n      })]\n    })\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["C:/development/example2/source/screens/ChooseAimag.js"],"names":["React","useState","useEffect","VStack","HStack","Button","IconButton","Icon","Text","NativeBaseProvider","Center","Box","StatusBar","View","Heading","FormControl","Input","Link","Pressable","FlatList","Avatar","Spacer","Checkbox","MaterialIcons","Feather","MaterialCommunityIcons","openDatabase","db","name","App","navigation","data","setFlatListItems","tempCBox","HeaderAppBar","navigate","updateAimag","Header","transaction","tx","executeSql","results","temp","i","rows","length","push","item","setcBoxVal","alert","cBoxVal","AimagJagsaaltShow","borderColor","color","acheck","isChecked","CheckBoxChanged","aid","isCheckd","ids","rowsAffected","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Button,\r\n  IconButton,\r\n  Icon,\r\n  Text,\r\n  NativeBaseProvider,\r\n  Center,\r\n  Box,\r\n  StatusBar,\r\n  View,\r\n  Heading,\r\n  FormControl,\r\n  Input,\r\n  Link,\r\n  Pressable,\r\n  FlatList,\r\n  Avatar,\r\n  Spacer,\r\n  Checkbox,\r\n} from \"native-base\";\r\nimport {\r\n  MaterialIcons,\r\n  Feather,\r\n  MaterialCommunityIcons,\r\n} from \"@expo/vector-icons\";\r\nimport { openDatabase } from \"expo-sqlite\";\r\nvar db = openDatabase({ name: \"aimag.db\" });\r\n\r\n// http://oblador.github.io/react-native-vector-icons/   --Icons\r\n// (hvz base, Native Base)\r\n\r\nfunction App({ navigation }) {\r\n  let [data, setFlatListItems] = useState([]);\r\n  // let [cBoxVal, setcBoxVal] = useState([]);\r\n  let tempCBox = [];\r\n\r\n  function HeaderAppBar({ navigation }) {\r\n    return (\r\n      <>\r\n        <StatusBar bg=\"#3700B3\" barStyle=\"light-content\" />\r\n        <Box safeAreaTop bg=\"#6200ee\" />\r\n        <HStack\r\n          bg=\"#6200ee\"\r\n          px=\"1\"\r\n          py=\"3\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          w=\"100%\"\r\n          maxW=\"100%\"\r\n        >\r\n          <HStack alignItems=\"center\">\r\n            <IconButton\r\n              onPress={() => navigation.navigate(\"HomeScreen\")}\r\n              icon={\r\n                <Icon\r\n                  size=\"sm\"\r\n                  as={MaterialIcons}\r\n                  name=\"arrow-back\"\r\n                  color=\"white\"\r\n                />\r\n              }\r\n            />\r\n            <Text color=\"white\" fontSize=\"20\" fontWeight=\"bold\">\r\n              Аймаг сонгох\r\n            </Text>\r\n          </HStack>\r\n          <HStack>\r\n            {/* <IconButton icon={<Icon as={Feather} name=\"map\" size=\"sm\" color=\"white\" />} />\r\n            <IconButton icon={<Icon as={MaterialIcons} name=\"search\" size=\"sm\" color=\"white\" />} /> */}\r\n            <IconButton\r\n              icon={\r\n                <Icon as={MaterialIcons} name=\"save\" size=\"sm\" color=\"white\" />\r\n              }\r\n              onPress={() => updateAimag({ navigation })}\r\n            />\r\n          </HStack>\r\n        </HStack>\r\n      </>\r\n    );\r\n  }\r\n  function Header({ navigation }) {\r\n    return (\r\n      <Center>\r\n        <HeaderAppBar navigation={navigation} />\r\n      </Center>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        \"SELECT aid, name, acheck, alink, daraaalal FROM aimag ORDER BY daraaalal ASC\",\r\n        // \"SELECT name FROM sum\",\r\n        [],\r\n        (tx, results) => {\r\n          var temp = [];\r\n          var tempCBox = [];\r\n          for (let i = 0; i < results.rows.length; ++i) {\r\n            temp.push(results.rows.item(i));\r\n\r\n            tempCBox.push([\r\n              results.rows.item(i)[\"aid\"],\r\n              results.rows.item(i)[\"acheck\"],\r\n            ]);\r\n          }\r\n          setcBoxVal([...tempCBox]);\r\n          setFlatListItems([...temp]);\r\n          alert(tempCBox);\r\n          alert(cBoxVal);\r\n          alert(temp);\r\n          alert(data);\r\n        }\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  function AimagJagsaaltShow({ data }) {\r\n    return (\r\n      <FlatList\r\n        data={data}\r\n        renderItem={({ item }) => (\r\n          <Box\r\n            borderBottomWidth=\"1\"\r\n            _dark={{\r\n              borderColor: \"gray.600\",\r\n            }}\r\n            borderColor=\"coolGray.200\"\r\n            pl=\"4\"\r\n            pr=\"5\"\r\n            py=\"2\"\r\n          >\r\n            <HStack space={3} justifyContent=\"space-between\">\r\n              <VStack>\r\n                <Text\r\n                  _dark={{\r\n                    color: \"warmGray.50\",\r\n                  }}\r\n                  color=\"coolGray.800\"\r\n                  bold\r\n                >\r\n                  {item.name}\r\n                </Text>\r\n              </VStack>\r\n              <Spacer />\r\n              <Text\r\n                fontSize=\"xs\"\r\n                _dark={{\r\n                  color: \"warmGray.50\",\r\n                }}\r\n                color=\"coolGray.800\"\r\n                alignSelf=\"flex-start\"\r\n              >\r\n                {item.acheck}\r\n              </Text>\r\n              <Checkbox\r\n                key={item.aid}\r\n                value=\"test\"\r\n                defaultIsChecked={item.acheck == 1 ? true : false}\r\n                accessibilityLabel=\"This is a dummy checkbox\"\r\n                onChange={(isChecked) => CheckBoxChanged(isChecked, item.aid)}\r\n              />\r\n            </HStack>\r\n          </Box>\r\n        )}\r\n        keyExtractor={(item) => item.aid}\r\n      />\r\n    );\r\n  }\r\n\r\n  function CheckBoxChanged(isCheckd, ids) {\r\n    tempCBox = [...cBoxVal];\r\n    for (let i = 0; i < tempCBox.length; i++) {\r\n      if (tempCBox[i][0] == ids) {\r\n        tempCBox[i][1] = isCheckd == true ? 1 : 0;\r\n        break;\r\n      }\r\n    }\r\n    // alert(tempCBox);\r\n    // setcBoxVal([...tempCBox]);\r\n  }\r\n\r\n  function updateAimag({ navigation }) {\r\n    for (let i = 0; i < tempCBox.length; i++) {\r\n      db.transaction((tx) => {\r\n        tx.executeSql(\r\n          \"UPDATE aimag SET acheck=? WHERE aid=?\",\r\n          [tempCBox[i][1], tempCBox[i][0]],\r\n          (tx, results) => {\r\n            if (results.rowsAffected > 0) {\r\n              console.log(\r\n                \"Success\",\r\n                \"User updated successfully\",\r\n                tempCBox[i][1],\r\n                tempCBox[i][0]\r\n              );\r\n            } else console.log(\"Updation Failed\");\r\n          }\r\n        );\r\n      });\r\n    }\r\n    navigation.navigate(\"HomeScreen\");\r\n  }\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <View flex={1} px=\"0\">\r\n        <Header navigation={navigation} />\r\n        <AimagJagsaaltShow data={data} />\r\n      </View>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}