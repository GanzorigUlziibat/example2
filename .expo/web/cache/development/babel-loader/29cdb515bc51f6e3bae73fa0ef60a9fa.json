{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n            console.log(pickerResult);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"a1\"\n    }), _jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(TouchableOpacity, {\n      onPress: openImagePickerAsync,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Pick a photo\"\n      })\n    }), _jsx(Button, {\n      title: \"Press me\"\n    }), _jsx(Image, {\n      source: require(\"../image/1.jpg\")\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/development/example1/source/screens/a1.js"],"names":["React","StatusBar","ImagePicker","App","navigation","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","console","log","styles","container","button","buttonText","require","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,GAAT,OAA6B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1C,MAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEjBH,WAAW,CAACI,mCAAZ,EAFiB;;AAAA;AACrBC,YAAAA,gBADqB;;AAAA,kBAIrBA,gBAAgB,CAACC,OAAjB,KAA6B,KAJR;AAAA;AAAA;AAAA;;AAKvBC,YAAAA,KAAK,CAAC,+CAAD,CAAL;AALuB;;AAAA;AAAA;AAAA,6CASAP,WAAW,CAACQ,uBAAZ,EATA;;AAAA;AASrBC,YAAAA,YATqB;AAUzBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAVyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAYA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEE,KAAC,IAAD;AAAA;AAAA,MAFF,EAGE,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEV,oBAA3B;AAAiD,MAAA,KAAK,EAAES,MAAM,CAACE,MAA/D;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AADF,MAHF,EAME,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd,MANF,EAOE,KAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,OAAO;AAAtB,MAPF,EAQE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MARF;AAAA,IADF;AAYD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View, Button, Image } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default function App({ navigation }) {\r\n  let openImagePickerAsync = async () => {\r\n    let permissionResult =\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"Permission to access camera roll is required!\");\r\n      return;\r\n    }\r\n\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n    console.log(pickerResult);\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>a1</Text>\r\n      <Text>Open up App.js to start working on your app!</Text>\r\n      <TouchableOpacity onPress={openImagePickerAsync} style={styles.button}>\r\n        <Text style={styles.buttonText}>Pick a photo</Text>\r\n      </TouchableOpacity>\r\n      <Button title=\"Press me\" />\r\n      <Image source={require(\"../image/1.jpg\")} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}